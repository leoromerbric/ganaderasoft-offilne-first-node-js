services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ganaderasoft-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: ganaderasoft
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - ganaderasoft-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10
      interval: 10s

  # Node.js API
  api:
    build: .
    container_name: ganaderasoft-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ganaderasoft
      DB_USER: app_user
      DB_PASSWORD: app_password
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      CORS_ORIGIN: http://localhost
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ganaderasoft-network
    volumes:
      - ./src:/app/src:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      timeout: 5s
      retries: 5
      interval: 30s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ganaderasoft-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api:
        condition: service_healthy
    networks:
      - ganaderasoft-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      timeout: 5s
      retries: 3
      interval: 30s

volumes:
  mysql_data:
    driver: local

networks:
  ganaderasoft-network:
    driver: bridge